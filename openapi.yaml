openapi: 3.1.0
info:
  title: Wanderlust Travel API
  version: 1.0.0
  description: RESTful API for hotel management & booking
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Hotel:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        star:
          type: integer
        city:
          type: string
        country:
          type: string
        address:
          type: string
  responses:
    UnauthorizedError:
      description: Unauthorized - Invalid or missing token
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
    NotFoundError:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Not Found
    BadRequestError:
      description: Bad Request - Invalid input or parameters
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Bad Request
security:
  - bearerAuth: []
paths:
  /hotels:
    get:
      tags:
        - Hotel
      summary: Get all hotels
      parameters:
        - in: query
          name: city
          schema:
            type: string
        - in: query
          name: star
          schema:
            type: integer
      responses:
        '200':
          description: List of hotels
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Hotel'
    post:
      tags:
        - Hotel
      summary: Create a hotel
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hotel'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hotel'
        '400':
          description: Invalid input
  /hotels/{id}:
    get:
      tags:
        - Hotel
      summary: Get hotel by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Hotel found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hotel'
        '404':
          description: Hotel not found
    put:
      tags:
        - Hotel
      summary: Update a hotel
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hotel'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hotel'
        '400':
          description: Invalid input
        '404':
          description: Hotel not found
    delete:
      tags:
        - Hotel
      summary: Delete a hotel
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted
        '404':
          description: Hotel not found
  /api/profile:
    get:
      tags:
        - User
      summary: Get current user's profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  username:
                    type: string
                  email:
                    type: string
                  role:
                    type: string

  /api/members/register:
    post:
      tags:
        - Member
      summary: Register a new member
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
                - email
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
      responses:
        '201':
          description: Member registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  message:
                    type: string
  /api/members/{id}/favourites:
    get:
      tags:
        - Member
      summary: List member's favourite hotels
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of favourite hotel IDs
          content:
            application/json:
              schema:
                type: object
                properties:
                  favorites:
                    type: array
                    items:
                      type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /api/members/{id}/favourites/{hotelId}:
    post:
      tags:
        - Member
      summary: Add a hotel to member's favourites
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: hotelId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Hotel added to favourites
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Added to favourites
        '400':
          description: Invalid hotelId or memberId format
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Member or Hotel not found
    delete:
      tags:
        - Member
      summary: Remove a hotel from member's favourites
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: hotelId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Hotel removed from favourites
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Removed from favourites
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Member or Hotel not found
  /api/operators/register:
    post:
      tags:
        - Operator
      summary: Register a new operator
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
                - email
                - agency
                - signupCode
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
                agency:
                  type: string
                signupCode:
                  type: string
      responses:
        '201':
          description: Operator registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  message:
                    type: string
  /api/operators/login:
    post:
      tags:
        - Operator
      summary: Login as an operator
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: JWT token and operator info
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      username:
                        type: string
                      email:
                        type: string
        '401':
          description: Invalid username or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /api/operators/refresh-token:
    post:
      tags:
        - Operator
      summary: Refresh operator JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refresh
              properties:
                refresh:
                  type: string
      responses:
        '200':
          description: New access token
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
        '400':
          description: Invalid token type or missing refresh token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Invalid or expired refresh token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/members/login:
    post:
      tags:
        - Member
      summary: Login as a member
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: JWT tokens and user info
          content:
            application/json:
              schema:
                type: object
                properties:
                  tokens:
                    type: object
                    properties:
                      access:
                        type: string
                      refresh:
                        type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      username:
                        type: string
                      email:
                        type: string
        '400':
          description: Validation failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  errors:
                    type: object
        '401':
          description: Invalid username or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string


  /api/hotels/{id}:
    get:
      tags:
        - Hotel
      summary: Get hotel by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Hotel detail
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Hotel"
    put:
      tags:
        - Hotel
      summary: Update hotel (operator only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Hotel"
      responses:
        '200':
          description: Hotel updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
    delete:
      tags:
        - Hotel
      summary: Delete hotel (operator only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Hotel deleted
  /api/members/{id}/upload-photo:
    post:
      tags:
        - Member
      summary: Upload member profile photo
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Photo uploaded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /api/messages:
    post:
      tags:
        - Message
      summary: Send a message
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - fromId
                - toId
                - content
              properties:
                fromId:
                  type: string
                toId:
                  type: string
                content:
                  type: string
      responses:
        '201':
          description: Message sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  message:
                    type: string
    get:
      tags:
        - Message
      summary: List all messages for a user
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of messages
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      type: object
  /api/messages/{id}/reply:
    post:
      tags:
        - Message
      summary: Reply to a message
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - fromId
                - content
              properties:
                fromId:
                  type: string
                content:
                  type: string
      responses:
        '200':
          description: Reply sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /api/messages/{id}:
    delete:
      tags:
        - Message
      summary: Delete a message
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Message deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

tags: []
